public class StringMethodsDemo {
    public static void main(String[] args) {
        // Example multiline text with leading spaces
        String multilineText = "   This is a\n   multiline\n   text with\n   leading spaces   ";

        // indent - add spaces to the beginning of each line
        String indentedText = multilineText.indent(3);
        System.out.println("Indented Text:");
        System.out.println(indentedText);

        // stripLeading - remove leading spaces
        String strippedLeading = multilineText.stripLeading();
        System.out.println("Stripped Leading Spaces:");
        System.out.println(strippedLeading);

        // stripTrailing - remove trailing spaces
        String strippedTrailing = multilineText.stripTrailing();
        System.out.println("Stripped Trailing Spaces:");
        System.out.println(strippedTrailing);

        // strip - remove leading and trailing whitespace characters
        String stripped = multilineText.strip();
        System.out.println("Stripped Whitespace:");
        System.out.println(stripped);

        // toLowerCase and toUpperCase
        String originalString = "Hello, World!";
        String lowercase = originalString.toLowerCase();
        String uppercase = originalString.toUpperCase();
        System.out.println("Lowercase: " + lowercase);
        System.out.println("Uppercase: " + uppercase);

        // concat
        String string1 = "Hello, ";
        String string2 = "World!";
        String concatenated = string1.concat(string2);
        System.out.println("Concatenated String: " + concatenated);

        // join - concatenate multiple strings with a delimiter
        String[] fruits = {"Apple", "Banana", "Orange"};
        String joinedFruits = String.join(", ", fruits);
        System.out.println("Joined Fruits: " + joinedFruits);

        // repeat - repeat a string
        String repeatedString = "abc".repeat(3);
        System.out.println("Repeated String: " + repeatedString);
    }
}
